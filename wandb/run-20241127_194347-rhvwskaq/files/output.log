
Epoch [1/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 122.23it/s, loss=0.302]
Epoch 1/100, Loss: 0.3645185335324361
Epoch [2/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 242.77it/s, loss=0.177]
Epoch 2/100, Loss: 0.22312728716776922
Epoch [3/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 242.51it/s, loss=0.178]
Epoch 3/100, Loss: 0.1944229660125879
Epoch [4/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 239.97it/s, loss=0.182]
Epoch 4/100, Loss: 0.18180025254304594
Epoch [5/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 240.40it/s, loss=0.169]
Epoch 5/100, Loss: 0.1729865876527933
Epoch [6/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 240.73it/s, loss=0.141]
Epoch 6/100, Loss: 0.16700493601652291
Epoch [7/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 26/26 [00:00<00:00, 238.77it/s, loss=0.163]
Epoch 7/100, Loss: 0.16450928839353415
Traceback (most recent call last):
  File "/mnt/hdd/pengy/insole_anno/train.py", line 108, in <module>
    train(model, train_loader, test_loader, criterion, optimizer, num_epochs=num_epochs, device="cuda:0" if torch.cuda.is_available() else "cpu")
  File "/mnt/hdd/pengy/insole_anno/train.py", line 44, in train
    test(model, test_loader, criterion, device)
  File "/mnt/hdd/pengy/insole_anno/train.py", line 62, in test
    plot_insole_heatmap_gif(y, outputs, f'./results/test_{i}.gif')
  File "/mnt/hdd/pengy/insole_anno/tools.py", line 87, in plot_insole_heatmap_gif
    frames[0].save(output_path, save_all=True, append_images=frames[1:], loop=0, duration=100)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 2459, in save
    save_handler(self, fp, filename)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 714, in _save_all
    _save(im, fp, filename, save_all=True)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 725, in _save
    if not save_all or not _write_multiple_frames(im, fp, palette):
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 624, in _write_multiple_frames
    delta, bbox = _getbbox(previous_im, im_frame)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 587, in _getbbox
    delta = ImageChops.subtract_modulo(im_frame, base_im)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/ImageChops.py", line 223, in subtract_modulo
    return image1._new(image1.im.chop_subtract_modulo(image2.im))
KeyboardInterrupt