Epoch [1/100]:   0%|                                                                                                                                                                                                                                                  | 0/26 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/mnt/hdd/pengy/insole_anno/train.py", line 112, in <module>
    train(model, train_loader, test_loader, criterion, optimizer, num_epochs=num_epochs, device="cuda:0" if torch.cuda.is_available() else "cpu")
  File "/mnt/hdd/pengy/insole_anno/train.py", line 27, in train
    outputs = model(x, y)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/hdd/pengy/insole_anno/networks/test_models.py", line 485, in forward
    enc_output, *_ = self.encoder(src_seq, src_mask)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/hdd/pengy/insole_anno/networks/test_models.py", line 129, in forward
    src_seq = self.src_word_emb(src_seq)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 116, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (512x512 and 51x51)
encoding src: torch.Size([16, 32, 512])