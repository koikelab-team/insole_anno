
Epoch [1/100]: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 59.77it/s, loss=0.295]
Epoch 1/100, Loss: 0.31704087211535525
Epoch [2/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 185.70it/s, loss=0.227]
Epoch 2/100, Loss: 0.2555924206972122
Epoch [3/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 195.71it/s, loss=0.241]
Epoch 3/100, Loss: 0.22591497462529403
Epoch [4/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 175.90it/s, loss=0.206]
Epoch 4/100, Loss: 0.20247068428076231
Epoch [5/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 199.76it/s, loss=0.153]
Epoch 5/100, Loss: 0.18226159879794487
Epoch [6/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 193.76it/s, loss=0.164]
Epoch 6/100, Loss: 0.16653656615660742
Epoch [7/100]: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:00<00:00, 200.68it/s, loss=0.122]
Epoch 7/100, Loss: 0.151541510453591
Traceback (most recent call last):
  File "/mnt/hdd/pengy/insole_anno/train.py", line 107, in <module>
    train(model, train_loader, test_loader, criterion, optimizer, num_epochs=num_epochs, device="cuda:0" if torch.cuda.is_available() else "cpu")
  File "/mnt/hdd/pengy/insole_anno/train.py", line 44, in train
    test(model, test_loader, criterion, device)
  File "/mnt/hdd/pengy/insole_anno/train.py", line 62, in test
    plot_insole_heatmap_gif(y, outputs, f'./results/test_{i}.gif')
  File "/mnt/hdd/pengy/insole_anno/tools.py", line 87, in plot_insole_heatmap_gif
    frames[0].save(output_path, save_all=True, append_images=frames[1:], loop=0, duration=100)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 2459, in save
    save_handler(self, fp, filename)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 714, in _save_all
    _save(im, fp, filename, save_all=True)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 725, in _save
    if not save_all or not _write_multiple_frames(im, fp, palette):
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 602, in _write_multiple_frames
    im_frame = _normalize_mode(im_frame.copy())
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/GifImagePlugin.py", line 492, in _normalize_mode
    im = im.convert("P", palette=Image.Palette.ADAPTIVE)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 980, in convert
    return self.quantize(colors)
  File "/home/pengy/.conda/envs/torch/lib/python3.10/site-packages/PIL/Image.py", line 1196, in quantize
    im = self._new(self.im.quantize(colors, method, kmeans))
KeyboardInterrupt